@using System.Security.Claims

@model IEnumerable<ToDoList.Models.ToDoItemModel>

@{
    ViewData["Title"] = "Index";
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var userToDoList = Model.Where(item => item.UserID == userId);
}

<h1>Pełna lista twoich zadań</h1>

@if(userToDoList.Count() > 0)
{
    <table class="table table-striped">
    <thead>
        <tr>
         
            <th scope="col">
                Zadanie
            </th>
            <th scope="col">
                Data
            </th scope="col">
            <th>
                Czas rozpoczęcia zadania
            </th>
            <th scope="col">
                Czas zakończenia zadania
            </th>
            <th scope="col">
                Opis
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in userToDoList) {
        <tr>
      
            <td>
               @item.Name
            </td>
            <td>
                @item.Date
            </td>
            <td>
                @(item.StartDate != null ? item.StartDate.Value.ToString("HH:mm") : "-")
            </td>
            <td>
                    @(item.EndDate != null ? item.EndDate.Value.ToString("HH:mm"): "-")
            </td>
            <td>
                @(item.Description != null ? item.Description : "-")
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edytuj</a> 
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Usuń</a>
            </td>
        </tr>
}
    </tbody>
    </table>
}
else
{
    <p>Obecnie brakuje elementów na liście utwórz coś</p>
    <a asp-action="Create" class="btn btn-primary">Utwórz nowy</a>
}

